CREATE TABLE AERODROMEAREAS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE AGRICULTURALAREAS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE AIRPORTS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE BUILTUPAREAS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   BUILTUPAREASTYPE VARCHAR2(30 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE COASTLINE (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   COASTLINETYPE VARCHAR2(10 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE FERRYCROSSINGS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE GLACIERCONTOURS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE GLACIERSNOWFIELDS_C (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE GLACIERSNOWFIELDS_S (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GLACIERSNOWFIELDSTYPE VARCHAR2(30 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE GRASSVEGETATION (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE HELIPORTS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE HYDROGRAPHYNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE HYDRORELIEFOBJECTSNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE LOCALROADS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   VERTICALPOSITION VARCHAR2(19 CHAR)
);

CREATE TABLE MAINROADS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   VERTICALPOSITION VARCHAR2(19 CHAR)
);

CREATE TABLE NATIONALBOUNDARIES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE NONREGULARROADS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE OROGRAPHYOBJECTSNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE POPULATEDPLACES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE POPULATEDPLACESNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   POPULATEDPLACE VARCHAR2(16 CHAR) NOT NULL
);

CREATE TABLE PORTS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE PORTSNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE PROTECTEDAREASNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE PROTECTEDSITES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE RAILWAYLINES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   VERTICALPOSITION VARCHAR2(19 CHAR)
);

CREATE TABLE RAILWAYSTATIONS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE RAILWAYSTATIONSNAMES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   TEXTSTRING VARCHAR2(255 CHAR) NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE REGIONALROADS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   VERTICALPOSITION VARCHAR2(19 CHAR)
);

CREATE TABLE RUNWAYLINES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE SEA (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE SEAPLANEBASES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE SHRUBVEGETATION (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE SOILSURFACEREGIONS_C (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   SOILTYPE VARCHAR2(21 CHAR) NOT NULL
);

CREATE TABLE SOILSURFACEREGIONS_S (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL,
   SOILTYPE VARCHAR2(21 CHAR)
);

CREATE TABLE SUB_NATIONALBOUNDARIES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE TERRAINCONTOURS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE TUNDRAVEGETATION (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE UNCLASSIFIEDAREAS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE WATERBODIES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE WATERCOURSEAREAS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE WATERCOURSELINES (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE WETLANDS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);

CREATE TABLE WOODFORESTS (

   OBJECTID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 NOORDER CACHE 200) PRIMARY KEY,
   COUNTRY VARCHAR2(3 CHAR) NOT NULL,
   ID VARCHAR2(255 CHAR) NOT NULL,
   LICENSE VARCHAR2(255 CHAR),
   DATE DATE NOT NULL,
   GEOMETRY SDO_GEOMETRY NOT NULL
);


ALTER TABLE AERODROMEAREAS ADD CONSTRAINT CK_AERODROMEAR_DATE060 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE AGRICULTURALAREAS ADD CONSTRAINT CK_AGRICULTURA_DATE198 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE AIRPORTS ADD CONSTRAINT CK_AIRPORTS_DATE162 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE BUILTUPAREAS ADD CONSTRAINT CK_BUILTUPAREA_BUILTUPAREA107 CHECK (BUILTUPAREASTYPE IN ('builtupAreas', 'separateQuartersFarmsBuildings'));
ALTER TABLE BUILTUPAREAS ADD CONSTRAINT CK_BUILTUPAREA_DATE115 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE COASTLINE ADD CONSTRAINT CK_COASTLINE_COASTLINETY214 CHECK (COASTLINETYPE IN ('ordinary', 'steepRocky'));
ALTER TABLE COASTLINE ADD CONSTRAINT CK_COASTLINE_DATE012 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE FERRYCROSSINGS ADD CONSTRAINT CK_FERRYCROSSI_DATE173 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE GLACIERCONTOURS ADD CONSTRAINT CK_GLACIERCONT_DATE141 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE GLACIERSNOWFIELDS_C ADD CONSTRAINT CK_GLACIERSNOW_DATE085 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE GLACIERSNOWFIELDS_S ADD CONSTRAINT CK_GLACIERSNOW_DATE068 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE GLACIERSNOWFIELDS_S ADD CONSTRAINT CK_GLACIERSNOW_GLACIERSNOW193 CHECK (GLACIERSNOWFIELDSTYPE IN ('glaciersFirnSnowfieldsFraisils', 'icyPrecipesOutputsFossilIce'));
ALTER TABLE GRASSVEGETATION ADD CONSTRAINT CK_GRASSVEGETA_DATE224 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE HELIPORTS ADD CONSTRAINT CK_HELIPORTS_DATE047 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE HYDROGRAPHYNAMES ADD CONSTRAINT CK_HYDROGRAPHY_DATE167 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE HYDRORELIEFOBJECTSNAMES ADD CONSTRAINT CK_HYDRORELIEF_DATE154 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE LOCALROADS ADD CONSTRAINT CK_LOCALROADS_DATE201 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE LOCALROADS ADD CONSTRAINT CK_LOCALROADS_VERTICALPOS152 CHECK (VERTICALPOSITION IS NULL OR VERTICALPOSITION IN ('onGroundSurface', 'suspendedOrElevated', 'underground'));
ALTER TABLE MAINROADS ADD CONSTRAINT CK_MAINROADS_DATE079 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE MAINROADS ADD CONSTRAINT CK_MAINROADS_VERTICALPOS133 CHECK (VERTICALPOSITION IS NULL OR VERTICALPOSITION IN ('onGroundSurface', 'suspendedOrElevated', 'underground'));
ALTER TABLE NATIONALBOUNDARIES ADD CONSTRAINT CK_NATIONALBOU_DATE221 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE NONREGULARROADS ADD CONSTRAINT CK_NONREGULARR_DATE080 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE OROGRAPHYOBJECTSNAMES ADD CONSTRAINT CK_OROGRAPHYOB_DATE113 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE POPULATEDPLACES ADD CONSTRAINT CK_POPULATEDPL_DATE213 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE POPULATEDPLACESNAMES ADD CONSTRAINT CK_POPULATEDPL_DATE222 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE POPULATEDPLACESNAMES ADD CONSTRAINT CK_POPULATEDPL_POPULATEDPL251 CHECK (POPULATEDPLACE IN ('cities500k-1mill', 'towns100k-500k', 'towns50k-100k', 'towns50k', 'urban', 'rural'));
ALTER TABLE PORTS ADD CONSTRAINT CK_PORTS_DATE012 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE PORTSNAMES ADD CONSTRAINT CK_PORTSNAMES_DATE198 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE PROTECTEDAREASNAMES ADD CONSTRAINT CK_PROTECTEDAR_DATE126 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE PROTECTEDSITES ADD CONSTRAINT CK_PROTECTEDSI_DATE007 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE RAILWAYLINES ADD CONSTRAINT CK_RAILWAYLINE_DATE044 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE RAILWAYLINES ADD CONSTRAINT CK_RAILWAYLINE_VERTICALPOS053 CHECK (VERTICALPOSITION IS NULL OR VERTICALPOSITION IN ('onGroundSurface', 'suspendedOrElevated', 'underground'));
ALTER TABLE RAILWAYSTATIONS ADD CONSTRAINT CK_RAILWAYSTAT_DATE144 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE RAILWAYSTATIONSNAMES ADD CONSTRAINT CK_RAILWAYSTAT_DATE121 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE REGIONALROADS ADD CONSTRAINT CK_REGIONALROA_DATE187 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE REGIONALROADS ADD CONSTRAINT CK_REGIONALROA_VERTICALPOS207 CHECK (VERTICALPOSITION IS NULL OR VERTICALPOSITION IN ('onGroundSurface', 'suspendedOrElevated', 'underground'));
ALTER TABLE RUNWAYLINES ADD CONSTRAINT CK_RUNWAYLINES_DATE212 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE SEA ADD CONSTRAINT CK_SEA_DATE156 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE SEAPLANEBASES ADD CONSTRAINT CK_SEAPLANEBAS_DATE112 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE SHRUBVEGETATION ADD CONSTRAINT CK_SHRUBVEGETA_DATE026 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE SOILSURFACEREGIONS_C ADD CONSTRAINT CK_SOILSURFACE_DATE237 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE SOILSURFACEREGIONS_C ADD CONSTRAINT CK_SOILSURFACE_SOILTYPE182 CHECK (SOILTYPE IN ('morainesStonySurfaces', 'rockyRegions', 'sand'));
ALTER TABLE SOILSURFACEREGIONS_S ADD CONSTRAINT CK_SOILSURFACE_DATE147 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE SOILSURFACEREGIONS_S ADD CONSTRAINT CK_SOILSURFACE_SOILTYPE237 CHECK (SOILTYPE IS NULL OR SOILTYPE IN ('morainesStonySurfaces', 'rockyRegions', 'sand'));
ALTER TABLE SUB_NATIONALBOUNDARIES ADD CONSTRAINT CK_SUB_NATIONA_DATE207 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE TERRAINCONTOURS ADD CONSTRAINT CK_TERRAINCONT_DATE163 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE TUNDRAVEGETATION ADD CONSTRAINT CK_TUNDRAVEGET_DATE126 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE UNCLASSIFIEDAREAS ADD CONSTRAINT CK_UNCLASSIFIE_DATE024 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE WATERBODIES ADD CONSTRAINT CK_WATERBODIES_DATE086 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE WATERCOURSEAREAS ADD CONSTRAINT CK_WATERCOURSE_DATE248 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE WATERCOURSELINES ADD CONSTRAINT CK_WATERCOURSE_DATE125 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE WETLANDS ADD CONSTRAINT CK_WETLANDS_DATE227 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');
ALTER TABLE WOODFORESTS ADD CONSTRAINT CK_WOODFORESTS_DATE001 CHECK (TO_CHAR(DATE, 'HH24:MI:SS') = '00:00:00');

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('AERODROMEAREAS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('AGRICULTURALAREAS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('AIRPORTS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('BUILTUPAREAS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('COASTLINE', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('FERRYCROSSINGS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('GLACIERCONTOURS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('GLACIERSNOWFIELDS_C', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('GLACIERSNOWFIELDS_S', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('GRASSVEGETATION', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('HELIPORTS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('HYDROGRAPHYNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('HYDRORELIEFOBJECTSNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('LOCALROADS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('MAINROADS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('NATIONALBOUNDARIES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('NONREGULARROADS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('OROGRAPHYOBJECTSNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('POPULATEDPLACES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('POPULATEDPLACESNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('PORTS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('PORTSNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('PROTECTEDAREASNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('PROTECTEDSITES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('RAILWAYLINES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('RAILWAYSTATIONS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('RAILWAYSTATIONSNAMES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('REGIONALROADS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('RUNWAYLINES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('SEA', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('SEAPLANEBASES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('SHRUBVEGETATION', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('SOILSURFACEREGIONS_C', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('SOILSURFACEREGIONS_S', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('SUB_NATIONALBOUNDARIES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('TERRAINCONTOURS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('TUNDRAVEGETATION', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('UNCLASSIFIEDAREAS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('WATERBODIES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('WATERCOURSEAREAS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('WATERCOURSELINES', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('WETLANDS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID) VALUES ('WOODFORESTS', 'GEOMETRY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('Longitude', -180.0000, 180.0000, 0.005), MDSYS.SDO_DIM_ELEMENT('Latitude', -90.0000, 90.0000, 0.005)), 4326);

CREATE INDEX IDX_AERODROMEAREAS_GEOMETRY ON AERODROMEAREAS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_AGRICULTURALAREAS_GEOMETRY ON AGRICULTURALAREAS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_AIRPORTS_GEOMETRY ON AIRPORTS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=point');
CREATE INDEX IDX_BUILTUPAREAS_GEOMETRY ON BUILTUPAREAS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_COASTLINE_GEOMETRY ON COASTLINE (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_FERRYCROSSINGS_GEOMETRY ON FERRYCROSSINGS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_GLACIERCONTOURS_GEOMETRY ON GLACIERCONTOURS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_GLACIERSNOWFIELDS_C_GEOMET ON GLACIERSNOWFIELDS_C (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_GLACIERSNOWFIELDS_S_GEOMET ON GLACIERSNOWFIELDS_S (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_GRASSVEGETATION_GEOMETRY ON GRASSVEGETATION (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_HELIPORTS_GEOMETRY ON HELIPORTS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=point');
CREATE INDEX IDX_HYDROGRAPHYNAMES_GEOMETRY ON HYDROGRAPHYNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_HYDRORELIEFOBJECTSNAMES_GE ON HYDRORELIEFOBJECTSNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_LOCALROADS_GEOMETRY ON LOCALROADS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_MAINROADS_GEOMETRY ON MAINROADS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_NATIONALBOUNDARIES_GEOMETR ON NATIONALBOUNDARIES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_NONREGULARROADS_GEOMETRY ON NONREGULARROADS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_OROGRAPHYOBJECTSNAMES_GEOM ON OROGRAPHYOBJECTSNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_POPULATEDPLACESNAMES_GEOME ON POPULATEDPLACESNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_POPULATEDPLACES_GEOMETRY ON POPULATEDPLACES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=point');
CREATE INDEX IDX_PORTSNAMES_GEOMETRY ON PORTSNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_PORTS_GEOMETRY ON PORTS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=point');
CREATE INDEX IDX_PROTECTEDAREASNAMES_GEOMET ON PROTECTEDAREASNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_PROTECTEDSITES_GEOMETRY ON PROTECTEDSITES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_RAILWAYLINES_GEOMETRY ON RAILWAYLINES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_RAILWAYSTATIONSNAMES_GEOME ON RAILWAYSTATIONSNAMES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=multipolygon');
CREATE INDEX IDX_RAILWAYSTATIONS_GEOMETRY ON RAILWAYSTATIONS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=point');
CREATE INDEX IDX_REGIONALROADS_GEOMETRY ON REGIONALROADS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_RUNWAYLINES_GEOMETRY ON RUNWAYLINES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_SEAPLANEBASES_GEOMETRY ON SEAPLANEBASES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=point');
CREATE INDEX IDX_SEA_GEOMETRY ON SEA (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_SHRUBVEGETATION_GEOMETRY ON SHRUBVEGETATION (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_SOILSURFACEREGIONS_C_GEOME ON SOILSURFACEREGIONS_C (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_SOILSURFACEREGIONS_S_GEOME ON SOILSURFACEREGIONS_S (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_SUB_NATIONALBOUNDARIES_GEO ON SUB_NATIONALBOUNDARIES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_TERRAINCONTOURS_GEOMETRY ON TERRAINCONTOURS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_TUNDRAVEGETATION_GEOMETRY ON TUNDRAVEGETATION (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_UNCLASSIFIEDAREAS_GEOMETRY ON UNCLASSIFIEDAREAS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_WATERBODIES_GEOMETRY ON WATERBODIES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_WATERCOURSEAREAS_GEOMETRY ON WATERCOURSEAREAS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_WATERCOURSELINES_GEOMETRY ON WATERCOURSELINES (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=line');
CREATE INDEX IDX_WETLANDS_GEOMETRY ON WETLANDS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');
CREATE INDEX IDX_WOODFORESTS_GEOMETRY ON WOODFORESTS (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX PARAMETERS('layer_gtype=polygon');

COMMENT ON COLUMN AERODROMEAREAS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN AERODROMEAREAS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN AERODROMEAREAS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN AERODROMEAREAS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN AGRICULTURALAREAS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN AGRICULTURALAREAS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN AGRICULTURALAREAS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN AGRICULTURALAREAS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN AIRPORTS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN AIRPORTS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN AIRPORTS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN AIRPORTS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN BUILTUPAREAS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN BUILTUPAREAS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN BUILTUPAREAS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN BUILTUPAREAS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN COASTLINE.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN COASTLINE.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN COASTLINE.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN COASTLINE.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN FERRYCROSSINGS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN FERRYCROSSINGS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN FERRYCROSSINGS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN FERRYCROSSINGS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN GLACIERCONTOURS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN GLACIERCONTOURS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN GLACIERCONTOURS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN GLACIERCONTOURS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN GLACIERSNOWFIELDS_C.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN GLACIERSNOWFIELDS_C.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN GLACIERSNOWFIELDS_C.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN GLACIERSNOWFIELDS_C.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN GLACIERSNOWFIELDS_S.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN GLACIERSNOWFIELDS_S.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN GLACIERSNOWFIELDS_S.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN GLACIERSNOWFIELDS_S.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN GRASSVEGETATION.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN GRASSVEGETATION.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN GRASSVEGETATION.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN GRASSVEGETATION.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN HELIPORTS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN HELIPORTS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN HELIPORTS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN HELIPORTS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON TABLE HYDROGRAPHYNAMES IS 'Oceans, seas, bays, lakes, reservoirs, rivers, canals';
COMMENT ON COLUMN HYDROGRAPHYNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN HYDROGRAPHYNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN HYDROGRAPHYNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN HYDROGRAPHYNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON TABLE HYDRORELIEFOBJECTSNAMES IS 'Islands, peninsulas, capes';
COMMENT ON COLUMN HYDRORELIEFOBJECTSNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN HYDRORELIEFOBJECTSNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN HYDRORELIEFOBJECTSNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN HYDRORELIEFOBJECTSNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN LOCALROADS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN LOCALROADS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN LOCALROADS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN LOCALROADS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN MAINROADS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN MAINROADS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN MAINROADS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN MAINROADS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN NATIONALBOUNDARIES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN NATIONALBOUNDARIES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN NATIONALBOUNDARIES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN NATIONALBOUNDARIES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN NONREGULARROADS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN NONREGULARROADS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN NONREGULARROADS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN NONREGULARROADS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON TABLE OROGRAPHYOBJECTSNAMES IS 'High mountains, mountain ridges, highlands';
COMMENT ON COLUMN OROGRAPHYOBJECTSNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN OROGRAPHYOBJECTSNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN OROGRAPHYOBJECTSNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN OROGRAPHYOBJECTSNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN POPULATEDPLACES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN POPULATEDPLACES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN POPULATEDPLACES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN POPULATEDPLACES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN POPULATEDPLACESNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN POPULATEDPLACESNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN POPULATEDPLACESNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN POPULATEDPLACESNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN PORTS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN PORTS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN PORTS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN PORTS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN PORTSNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN PORTSNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN PORTSNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN PORTSNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN PROTECTEDAREASNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN PROTECTEDAREASNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN PROTECTEDAREASNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN PROTECTEDAREASNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN PROTECTEDSITES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN PROTECTEDSITES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN PROTECTEDSITES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN PROTECTEDSITES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN RAILWAYLINES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN RAILWAYLINES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN RAILWAYLINES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN RAILWAYLINES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN RAILWAYSTATIONS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN RAILWAYSTATIONS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN RAILWAYSTATIONS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN RAILWAYSTATIONS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN RAILWAYSTATIONSNAMES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN RAILWAYSTATIONSNAMES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN RAILWAYSTATIONSNAMES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN RAILWAYSTATIONSNAMES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN REGIONALROADS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN REGIONALROADS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN REGIONALROADS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN REGIONALROADS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN RUNWAYLINES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN RUNWAYLINES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN RUNWAYLINES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN RUNWAYLINES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN SEA.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN SEA.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN SEA.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN SEA.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN SEAPLANEBASES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN SEAPLANEBASES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN SEAPLANEBASES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN SEAPLANEBASES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN SHRUBVEGETATION.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN SHRUBVEGETATION.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN SHRUBVEGETATION.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN SHRUBVEGETATION.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN SOILSURFACEREGIONS_C.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN SOILSURFACEREGIONS_C.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN SOILSURFACEREGIONS_C.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN SOILSURFACEREGIONS_C.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN SOILSURFACEREGIONS_S.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN SOILSURFACEREGIONS_S.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN SOILSURFACEREGIONS_S.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN SOILSURFACEREGIONS_S.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN SUB_NATIONALBOUNDARIES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN SUB_NATIONALBOUNDARIES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN SUB_NATIONALBOUNDARIES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN SUB_NATIONALBOUNDARIES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN TERRAINCONTOURS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN TERRAINCONTOURS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN TERRAINCONTOURS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN TERRAINCONTOURS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN TUNDRAVEGETATION.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN TUNDRAVEGETATION.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN TUNDRAVEGETATION.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN TUNDRAVEGETATION.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN UNCLASSIFIEDAREAS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN UNCLASSIFIEDAREAS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN UNCLASSIFIEDAREAS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN UNCLASSIFIEDAREAS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN WATERBODIES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN WATERBODIES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN WATERBODIES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN WATERBODIES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN WATERCOURSEAREAS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN WATERCOURSEAREAS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN WATERCOURSEAREAS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN WATERCOURSEAREAS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN WATERCOURSELINES.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN WATERCOURSELINES.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN WATERCOURSELINES.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN WATERCOURSELINES.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN WETLANDS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN WETLANDS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN WETLANDS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN WETLANDS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
COMMENT ON COLUMN WOODFORESTS.COUNTRY IS 'three-letter country code defined in ISO 3166-1';
COMMENT ON COLUMN WOODFORESTS.DATE IS 'date supplied in the data delivery';
COMMENT ON COLUMN WOODFORESTS.ID IS 'identifikation of the feature which in combination with the country code is unique';
COMMENT ON COLUMN WOODFORESTS.LICENSE IS 'description or reference to any commercial (or similar) license or copyright notice applicable to information regarding the feature or data set';
